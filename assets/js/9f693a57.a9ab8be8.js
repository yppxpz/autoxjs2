"use strict";(self.webpackChunkautox_doc=self.webpackChunkautox_doc||[]).push([[6597],{3370:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>o,contentTitle:()=>i,default:()=>u,frontMatter:()=>r,metadata:()=>c,toc:()=>s});var a=t(4848),l=t(8453);const r={},i="WebView \u4e0e HTML",c={id:"rhino/advanced/webViewAndHtml",title:"WebView \u4e0e HTML",description:"*JsBridge",source:"@site/docs/rhino/advanced/webViewAndHtml.md",sourceDirName:"rhino/advanced",slug:"/rhino/advanced/webViewAndHtml",permalink:"/docs/rhino/advanced/webViewAndHtml",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/rhino/advanced/webViewAndHtml.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Threads \u591a\u7ebf\u7a0b",permalink:"/docs/rhino/advanced/threads"},next:{title:"Zips \u538b\u7f29\u4e0e\u89e3\u538b",permalink:"/docs/rhino/advanced/zips"}},o={},s=[{value:"*JsBridge",id:"jsbridge",level:2},{value:"\u7eafjs\u5b9e\u73b0",id:"\u7eafjs\u5b9e\u73b0",level:2}];function d(e){const n={br:"br",code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,l.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.h1,{id:"webview-\u4e0e-html",children:"WebView \u4e0e HTML"}),"\n",(0,a.jsx)(n.h2,{id:"jsbridge",children:"*JsBridge"}),"\n",(0,a.jsxs)(n.p,{children:["v6.3.9\u65b0\u589e",(0,a.jsx)(n.br,{}),"\n","html>>"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-html",children:'<html>\n  <body style="font: size 2em">\n    <div style="font-size: 100px">\u539f\u5185\u5bb9</div>\n    \x3c!-- \u5bfc\u5165\u4f9d\u8d56\u5305\uff0c\u4e5f\u53ef\u4ee5\u4e0d\u52a0\uff0c\u4e0d\u8fc7\u9700\u8981\u76d1\u542cAutoxJsBridgeReady\u4e8b\u4ef6\u540e\u624d\u80fd\u4f7f\u7528$autox --\x3e\n    <script src="autox://sdk.v1.js"><\/script>\n    <script>\n      function addText(text) {\n        const div = document.createElement("div");\n        div.innerHTML = text;\n        document.body.appendChild(div);\n      }\n      //\u6ce8\u518c\u4e00\u4e2a\u76d1\u542c\u51fd\u6570\n      $autox.registerHandler("jsTest", (data, callBack) => {\n        addText(`\u6765\u81ea\u5b89\u5353\u8c03\u7528\uff0cdata=${data}`);\n        setTimeout(() => {\n          //\u56de\u8c03\u5b89\u5353\n          callBack("web\u56de\u8c03\u6570\u636e");\n        }, 1000);\n      });\n      //\u8c03\u7528\u5b89\u5353\u7aef\n      $autox.callHandler("test", "web\u8c03\u7528\u6570\u636e", (data) => {\n        addText("\u5b89\u5353\u56de\u8c03, data:" + data);\n      });\n\n      document.addEventListener("AutoxJsBridgeReady", () => {\n        //$autox.\n      });\n    <\/script>\n  </body>\n</html>\n'})}),"\n",(0,a.jsx)(n.p,{children:"js\u4ee3\u7801"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-js",children:'"ui";\n\nui.layout(`\n    <vertical>\n        <webview id="web" h="*"/>\n    </vertical>`)\n\nui.web.loadUrl("file://" + files.path("./\u7f51\u9875.html"))\n/*\n    \u6ce8\u610f\uff1a\u5728web\u4e0e\u5b89\u5353\u7aef\u4f20\u9012\u7684\u6570\u636e\u53ea\u80fd\u662f\u5b57\u7b26\u4e32\uff0c\u5176\u4ed6\u6570\u636e\u9700\u81ea\u884c\u4f7f\u7528JSON\u5e8f\u5217\u5316\n    \u5728\u8c03\u7528callHandler\u65f6\u4f20\u5165\u4e86\u56de\u8c03\u51fd\u6570\uff0c\u4f46web\u7aef\u6ca1\u6709\u8c03\u7528\u5219\u4f1a\u9020\u6210\u5185\u5b58\u6cc4\u9732\u3002\n    jsBridge\u81ea\u52a8\u6ce8\u5165\u4f9d\u8d56\u4e8ewebViewClient\uff0c\u5982\u8bbe\u7f6e\u4e86\u81ea\u5b9a\u4e49webViewClient\u5219\u9700\u8981\u5728\u5408\u9002\u7684\u65f6\u673a\uff08\u9875\u9762\u52a0\u8f7d\u5b8c\u6210\u540e\uff09\u8c03\u7528webview.injectionJsBridge()\u624b\u52a8\u6ce8\u5165\n*/\n//\u6ce8\u518c\u4e00\u4e2a\u76d1\u542c\u51fd\u6570\nui.web.jsBridge.registerHandler("test", (data, callBack) => {\n    toastLog("web\u8c03\u7528\u5b89\u5353,data:" + data)\n    setTimeout(() => {\n        //\u56de\u8c03web\n        callBack("1155")\n    }, 2000)\n})\n//\u5b9a\u65f6\u5668\u4e2d\u7b49\u5f85web\u52a0\u8f7d\u5b8c\u6210\nsetTimeout(() => {\n    ui.web.jsBridge.callHandler(\'jsTest\', \'\u6570\u636e\', (data) => {\n        toastLog(\'web\u56de\u8c03,data:\' + data)\n    })\n}, 1000)\n'})}),"\n",(0,a.jsx)(n.h2,{id:"\u7eafjs\u5b9e\u73b0",children:"\u7eafjs\u5b9e\u73b0"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-js",children:'"ui";\nui.layout(\n    <vertical>\n        <horizontal bg="#c7edcc" gravity="center" h="auto">\n            <button text="\u7f51\u7edc\u51b2\u6d6a" id="surfInternetBtn" style="Widget.AppCompat.Button.Colored" w="auto" />\n            <button text="\u8bb0\u5fc6\u7ffb\u724c" id="loadLocalHtmlBtn" style="Widget.AppCompat.Button.Colored" w="auto" />\n            <button text="\u63a7\u5236\u53f0" id="consoleBtn" style="Widget.AppCompat.Button.Colored" w="auto" />\n        </horizontal>\n        <vertical h="*" w="*">\n            <webview id="webView" layout_below="title" w="*" h="*" />\n        </vertical>\n    </vertical>\n);\n\nfunction callJavaScript(webViewWidget, script, callback) {\n    try {\n        console.assert(webViewWidget != null, "webView\u63a7\u4ef6\u4e3a\u7a7a");\n        //console.log(script.toString())\n        webViewWidget.evaluateJavascript("javascript:" + script, new JavaAdapter(android.webkit.ValueCallback, {\n            onReceiveValue: (val) => {\n                if (callback) {\n                    callback(val);\n                }\n            }\n        }));\n    } catch (e) {\n        console.error("\u6267\u884cJavaScript\u5931\u8d25");\n        console.trace(e);\n    }\n}\n\nfunction AutoX() {\n    let getAutoXFrame = () => {\n        let bridgeFrame = document.getElementById("AutoXFrame");\n        if (!bridgeFrame) {\n            bridgeFrame = document.createElement(\'iframe\');\n            bridgeFrame.id = "AutoXFrame";\n            bridgeFrame.style = "display: none";\n            document.body.append(bridgeFrame);\n        }\n        return bridgeFrame;\n    };\n    const h5Callbackers = {};\n    let h5CallbackIndex = 1;\n    let setCallback = (callback) => {\n        let callId = h5CallbackIndex++;\n        h5Callbackers[callId] = {\n            "callback": callback\n        };\n        return callId;\n    };\n    let getCallback = (callId) => {\n        let callback = h5Callbackers[callId];\n        if (callback) {\n            delete h5Callbackers[callId];\n        }\n        return callback;\n    };\n\n    function invoke(cmd, params, callback) {\n        let callId = null;\n        try {\n            let paramsStr = JSON.stringify(params);\n            let AutoXFrame = getAutoXFrame();\n            callId = setCallback(callback);\n            AutoXFrame.src = "jsbridge://" + cmd + "/" + callId + "/" + encodeURIComponent(paramsStr);\n        } catch (e) {\n            if (callId) {\n                getCallback(callId);\n            }\n            console.trace(e);\n        }\n    };\n    let callback = (data) => {\n        let callId = data.callId;\n        let params = data.params;\n        let callbackFun = getCallback(callId);\n        if (callbackFun) {\n            callbackFun.callback(params);\n        }\n    };\n    return {\n        invoke: invoke,\n        callback: callback\n    };\n};\nfunction bridgeHandler_handle(cmd, params) {\n    console.log(\'bridgeHandler\u5904\u7406 cmd=%s, params=%s\', cmd, JSON.stringify(params));\n    let fun = this[cmd];\n    if (!fun) {\n        throw new Error("cmd= " + cmd + " \u6ca1\u6709\u5b9a\u4e49\u5b9e\u73b0");\n    }\n    let ret = fun(params)\n    return ret;\n}\nfunction mFunction(params) {\n    toastLog(params.toString());\n    device.vibrate(120);\n    return files.isDir(\'/storage/emulated/0/Download\')//\'toast\u63d0\u793a\u6210\u529f\';\n}\nfunction webViewExpand_init(webViewWidget) {\n    webViewWidget.webViewClient = new JavaAdapter(android.webkit.WebViewClient, {\n        onPageFinished: (webView, curUrl) => {\n            try {\n                // \u6ce8\u5165 AutoX\n                callJavaScript(webView, AutoX.toString() + ";var auto0 = AutoX();auto0.invoke(\'mFunction\',\'This is AutoX!\',(data) => {console.log(\'\u63a5\u6536\u5230callback1:\' + JSON.stringify(data));});", null);\n            } catch (e) {\n                console.trace(e)\n            }\n        },\n        shouldOverrideUrlLoading: (webView, request) => {\n            let url = \'\';\n            try {\n                url = (request.a && request.a.a) || (request.url);\n                if (url instanceof android.net.Uri) {\n                    url = url.toString();\n                }\n                if (url.indexOf("jsbridge://") == 0) {\n                    let uris = url.split("/");\n                    let cmd = uris[2];\n                    let callId = uris[3];\n                    let params = java.net.URLDecoder.decode(uris[4], "UTF-8");\n                    console.log(\'AutoX\u5904\u7406JavaScript\u8c03\u7528\u8bf7\u6c42: callId=%s, cmd=%s, params=%s\', callId, cmd, params);\n                    let result = null;\n                    try {\n                        result = bridgeHandler_handle(cmd, JSON.parse(params));\n                    } catch (e) {\n                        console.trace(e);\n                        result = {\n                            message: e.message\n                        };\n                    }\n                    result = result || {};\n                    webView.loadUrl("javascript:auto0.callback({\'callId\':" + callId + ", \'params\': " + JSON.stringify(result) + "});");\n                } else if (url.startsWith("http://") || url.startsWith("https://") || url.startsWith("file://") || url.startsWith("ws://") || url.startsWith("wss://")) {\n                    webView.loadUrl(url);\n                } else {\n                }\n                return true;\n            } catch (e) {\n                if (e.javaException instanceof android.content.ActivityNotFoundException) {\n                    webView.loadUrl(url);\n                } else {\n                    toastLog(\'\u65e0\u6cd5\u6253\u5f00URL: \' + url);\n                }\n                console.trace(e);\n            }\n        },\n        onReceivedError: (webView, webResourceRequest, webResourceError) => {\n            let url = webResourceRequest.getUrl();\n            let errorCode = webResourceError.getErrorCode();\n            let description = webResourceError.getDescription();\n            console.trace(errorCode + " " + description + " " + url);\n        }\n    });\n    webViewWidget.webChromeClient = new JavaAdapter(android.webkit.WebChromeClient, {\n        onConsoleMessage: (msg) => {\n            console.log("[%s:%s]: %s", msg.sourceId(), msg.lineNumber(), msg.message());\n        }\n    });\n}\nwebViewExpand_init(ui.webView)\nui.webView.loadUrl("https://wht.im");\n\nui.surfInternetBtn.on("click", () => {\n    webViewExpand_init(ui.webView);\n    ui.webView.loadUrl("https://wht.im");\n});\nui.consoleBtn.on("click", () => {\n    app.startActivity("console");\n});\nui.loadLocalHtmlBtn.on(\'click\', () => {\n    webViewExpand_init(ui.webView);\n    let path = "file:" + files.path("game.html");\n    ui.webView.loadUrl(path);\n});\n\n'})})]})}function u(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>c});var a=t(6540);const l={},r=a.createContext(l);function i(e){const n=a.useContext(r);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:i(e.components),a.createElement(r.Provider,{value:n},e.children)}}}]);